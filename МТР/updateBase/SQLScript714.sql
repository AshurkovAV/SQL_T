BEGIN TRAN
BEGIN TRY
DECLARE @ErrorMessage NVARCHAR(4000)
		DECLARE @ErrorSeverity INT
		DECLARE @ErrorState INT
		
EXEC [dbo].[versionСheck] 713

/* Чтобы предотвратить возможность потери данных, необходимо внимательно просмотреть этот скрипт, прежде чем запускать его вне контекста конструктора баз данных.*/
BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION

ALTER TABLE dbo.M001
	DROP CONSTRAINT FK_M001_M001SECTI_M001SECT

ALTER TABLE dbo.M001Sections SET (LOCK_ESCALATION = TABLE)

COMMIT
BEGIN TRANSACTION

ALTER TABLE dbo.M001
	DROP CONSTRAINT FK_M001_M001CLASS_M001CLAS

ALTER TABLE dbo.M001Classes SET (LOCK_ESCALATION = TABLE)

COMMIT
BEGIN TRANSACTION

CREATE TABLE dbo.Tmp_M001
	(
	Id int NOT NULL IDENTITY (1, 1),
	IDDS nvarchar(10) NULL,
	DSNAME nvarchar(254) NULL,
	DATEBEG datetime NULL,
	DATEEND datetime NULL,
	Class int NULL,
	Section int NULL,
	Payable int NULL
	)  ON [PRIMARY]

ALTER TABLE dbo.Tmp_M001 SET (LOCK_ESCALATION = TABLE)

DECLARE @v sql_variant 
SET @v = cast(N'М001 Международный классификатор болезней (MKB10)
IDC10' as varchar(56))
EXECUTE sp_addextendedproperty N'MS_Description', @v, N'SCHEMA', N'dbo', N'TABLE', N'Tmp_M001', NULL, NULL

SET IDENTITY_INSERT dbo.Tmp_M001 ON

IF EXISTS(SELECT * FROM dbo.M001)
	 EXEC('INSERT INTO dbo.Tmp_M001 (Id, IDDS, DSNAME, DATEBEG, DATEEND, Class, Section, Payable)
		SELECT Id, IDDS, DSNAME, DATEBEG, DATEEND, Class, Section, Payable FROM dbo.M001 WITH (HOLDLOCK TABLOCKX)')

SET IDENTITY_INSERT dbo.Tmp_M001 OFF

ALTER TABLE dbo.FactMedicalEvent
	DROP CONSTRAINT FK_FACTMEDI_FMEDGENER_M001

ALTER TABLE dbo.ZFactMedicalEvent
	DROP CONSTRAINT FK_ZFACTMEDI_FMEDGENER_M001

ALTER TABLE dbo.FactMedicalEvent
	DROP CONSTRAINT FK_FACTMEDI_FMEDPRIMA_M001

ALTER TABLE dbo.ZFactMedicalEvent
	DROP CONSTRAINT FK_ZFACTMEDI_FMEDPRIMA_M001

ALTER TABLE dbo.FactMedicalEvent
	DROP CONSTRAINT FK_FACTMEDI_FMEDSECON_M001

ALTER TABLE dbo.globalIDC10Modernization
	DROP CONSTRAINT FK_GLOBALID_IDC10IDMO_M001

ALTER TABLE dbo.ZFactDiagnosisSecondary
	DROP CONSTRAINT FK_ZFactDiagnosisSecondary_M001

ALTER TABLE dbo.localIDC10GroupComposition
	DROP CONSTRAINT FK_LOCALIDC_IDC10ID_M001

DROP TABLE dbo.M001

EXECUTE sp_rename N'dbo.Tmp_M001', N'M001', 'OBJECT' 

ALTER TABLE dbo.M001 ADD CONSTRAINT
	PK_M001 PRIMARY KEY NONCLUSTERED 
	(
	Id
	) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]


CREATE NONCLUSTERED INDEX M001Class_FK ON dbo.M001
	(
	Class
	) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

CREATE NONCLUSTERED INDEX M001Section_FK ON dbo.M001
	(
	Section
	) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

ALTER TABLE dbo.M001 ADD CONSTRAINT
	FK_M001_M001CLASS_M001CLAS FOREIGN KEY
	(
	Class
	) REFERENCES dbo.M001Classes
	(
	Id
	) ON UPDATE  NO ACTION 
	 ON DELETE  NO ACTION 
	

ALTER TABLE dbo.M001 ADD CONSTRAINT
	FK_M001_M001SECTI_M001SECT FOREIGN KEY
	(
	Section
	) REFERENCES dbo.M001Sections
	(
	id
	) ON UPDATE  NO ACTION 
	 ON DELETE  NO ACTION 
	

COMMIT
BEGIN TRANSACTION

ALTER TABLE dbo.localIDC10GroupComposition ADD CONSTRAINT
	FK_LOCALIDC_IDC10ID_M001 FOREIGN KEY
	(
	IDC10Id
	) REFERENCES dbo.M001
	(
	Id
	) ON UPDATE  NO ACTION 
	 ON DELETE  NO ACTION 
	

ALTER TABLE dbo.localIDC10GroupComposition SET (LOCK_ESCALATION = TABLE)

COMMIT
BEGIN TRANSACTION

ALTER TABLE dbo.ZFactDiagnosisSecondary ADD CONSTRAINT
	FK_ZFactDiagnosisSecondary_M001 FOREIGN KEY
	(
	Diagnosis
	) REFERENCES dbo.M001
	(
	Id
	) ON UPDATE  NO ACTION 
	 ON DELETE  NO ACTION 
	

ALTER TABLE dbo.ZFactDiagnosisSecondary SET (LOCK_ESCALATION = TABLE)

COMMIT
BEGIN TRANSACTION

ALTER TABLE dbo.globalIDC10Modernization ADD CONSTRAINT
	FK_GLOBALID_IDC10IDMO_M001 FOREIGN KEY
	(
	IDC10Id
	) REFERENCES dbo.M001
	(
	Id
	) ON UPDATE  NO ACTION 
	 ON DELETE  NO ACTION 
	

ALTER TABLE dbo.globalIDC10Modernization SET (LOCK_ESCALATION = TABLE)

COMMIT
BEGIN TRANSACTION

ALTER TABLE dbo.ZFactMedicalEvent ADD CONSTRAINT
	FK_ZFACTMEDI_FMEDGENER_M001 FOREIGN KEY
	(
	DiagnosisGeneral
	) REFERENCES dbo.M001
	(
	Id
	) ON UPDATE  NO ACTION 
	 ON DELETE  NO ACTION 
	

ALTER TABLE dbo.ZFactMedicalEvent ADD CONSTRAINT
	FK_ZFACTMEDI_FMEDPRIMA_M001 FOREIGN KEY
	(
	DiagnosisPrimary
	) REFERENCES dbo.M001
	(
	Id
	) ON UPDATE  NO ACTION 
	 ON DELETE  NO ACTION 
	

ALTER TABLE dbo.ZFactMedicalEvent SET (LOCK_ESCALATION = TABLE)

COMMIT
BEGIN TRANSACTION

ALTER TABLE dbo.FactMedicalEvent ADD CONSTRAINT
	FK_FACTMEDI_FMEDGENER_M001 FOREIGN KEY
	(
	DiagnosisGeneral
	) REFERENCES dbo.M001
	(
	Id
	) ON UPDATE  NO ACTION 
	 ON DELETE  NO ACTION 
	

ALTER TABLE dbo.FactMedicalEvent ADD CONSTRAINT
	FK_FACTMEDI_FMEDPRIMA_M001 FOREIGN KEY
	(
	DiagnosisPrimary
	) REFERENCES dbo.M001
	(
	Id
	) ON UPDATE  NO ACTION 
	 ON DELETE  NO ACTION 
	

ALTER TABLE dbo.FactMedicalEvent ADD CONSTRAINT
	FK_FACTMEDI_FMEDSECON_M001 FOREIGN KEY
	(
	DiagnosisSecondary
	) REFERENCES dbo.M001
	(
	Id
	) ON UPDATE  NO ACTION 
	 ON DELETE  NO ACTION 
	

ALTER TABLE dbo.FactMedicalEvent SET (LOCK_ESCALATION = TABLE)

COMMIT


EXEC [dbo].[versionUpdate] 714
COMMIT TRAN;		
END TRY
		BEGIN CATCH			
			SET @ErrorMessage= ERROR_MESSAGE()
			SET @ErrorSeverity= ERROR_SEVERITY()
			SET @ErrorState= ERROR_STATE()
			RAISERROR (@ErrorMessage,@ErrorSeverity,@ErrorState)
			IF (@@trancount > 0) ROLLBACK TRAN						
		END CATCH
IF (@@trancount > 0) ROLLBACK TRAN;
